//Method Overloading 정의하는 규칙과 사용 규칙
package step11.ex10;

public class Exam01 {
    public static void main(String[] args) {
//        메소드 사용하기
//        같은 이름의 메소드가 여러 개 있을 경우
//        메소드를 호출할 때 넘겨주는 값(아규먼트)의 타입과 개수로 결정한다
        
        
        A.m();
        
        A.m(100);
        
        A.m("Hello");
        
        A.m(100, "Hello");
        
        A.m("Hello", 100);
        
        
        
        //A.m(3.14f); float 타입의 값을 받는 m은 없음
        
//        메소드를 찾을 때 아규먼트의 타입과 일치하는 메소드를 찾기 때문에
//        메소드의 파라미터 이름은 관련이 없다
    }
}


// Overloading
// 파라미터 타입이나 개수, 순서는 다르지만 이름이 같은 메소드를 여러 개 만들 수 있는 문법
// 왜 필요할까?
// 파라미터의 형식은 다르지만 같은 기능을 수행하는 메소드에 대해 
// 같은 이름을 부여함으로써 프로그래밍의 일관성을 제공하기 위함


